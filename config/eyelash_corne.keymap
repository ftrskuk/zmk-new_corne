#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        lshft {
            bindings = <&kp LSHFT>;
            key-positions = <14 15>;
        };

        lcrtl {
            bindings = <&kp LCTRL>;
            key-positions = <15 16>;
        };

        lalt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 17>;
        };

        lctrl_alt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <15 16 17>;
        };

        lshft_ctrl {
            bindings = <&kp LS(LCTRL)>;
            key-positions = <14 15 16>;
        };

        lshft_alt {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <14 17 16>;
        };

        lshft_win {
            bindings = <&kp LS(LEFT_WIN)>;
            key-positions = <17 14 18>;
        };

        lctrl_win {
            bindings = <&kp LC(LEFT_WIN)>;
            key-positions = <17 18 15>;
        };

        lalt_win {
            bindings = <&kp LA(LEFT_WIN)>;
            key-positions = <16 17 18>;
        };

        rctrl {
            bindings = <&kp RCTRL>;
            key-positions = <25 24>;
        };

        ralt {
            bindings = <&kp LALT>;
            key-positions = <24 23>;
        };

        rwin {
            bindings = <&kp LWIN>;
            key-positions = <23 22>;
        };

        rctrl_alt {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <25 24 23>;
        };

        rshft_ctrl {
            bindings = <&kp LS(LCTRL)>;
            key-positions = <26 25 24>;
        };

        rshft_alt {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <24 26 23>;
        };

        rsfht_win {
            bindings = <&kp LS(LEFT_WIN)>;
            key-positions = <23 26 22>;
        };

        rctrl_win {
            bindings = <&kp LC(LEFT_WIN)>;
            key-positions = <25 22 23>;
        };

        ralt_win {
            bindings = <&kp LA(LEFT_WIN)>;
            key-positions = <23 24 22>;
        };

        rshft {
            bindings = <&kp RSHFT>;
            key-positions = <26 25>;
        };

        ra5 {
            bindings = <&to 5>;
            key-positions = <45 46 47>;
        };

        left_win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E        &kp R        &kp T                               &kp UP               &kp Y        &kp U        &kp I          &kp O    &kp P     &kp DEL
&td0       &kp A  &kp S  &kp D        &kp F        &kp G                     &kp LEFT  &none     &kp RIGHT  &kp H        &kp J        &kp K          &kp L    &kp SEMI  &kp SQT
&kp LC(Z)  &kp Z  &kp X  &kp C        &kp V        &kp B        &kp SPACE              &kp DOWN             &kp N        &kp M        &kp COMMA      &kp DOT  &kp FSLH  &kp ESC
                         &lt 5 SPACE  &lt 1 SPACE  &lt 3 SPACE                                              &lt 4 ENTER  &lt 2 ENTER  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1_mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &kp UP               &kp LC(Z)  &kp LC(X)       &kp LC(C)       &kp LC(V)     &kp LC(F)        &kp LC(A)
&trans  &trans  &trans  &trans  &trans  &trans            &kp LEFT  &trans    &kp RIGHT  &kp ENTER  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans              &kp DOWN             &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                        &trans  &trans  &trans                                           &mkp MCLK  &mkp LCLK       &mkp RCLK
            >;
        };

        layer_2 {
            display-name = "number";
            bindings = <
&kp SEMI   &kp N7  &kp N8  &kp N9  &kp MINUS  &kp EQUAL                                &mmv MOVE_UP                     &kp LC(Z)   &kp LC(X)  &kp LC(C)         &kp LC(C)          &kp LC(V)  &kp DELETE
&kp COMMA  &kp N4  &kp N5  &kp N6  &kp LBKT   &kp RBKT                 &mmv MOVE_LEFT  &none           &mmv MOVE_RIGHT  &kp ENTER   &kp LEFT   &kp DOWN          &kp UP             &kp RIGHT  &kp PG_UP
&kp DOT    &kp N1  &kp N2  &kp N3  &kp GRAVE  &kp BSLH   &kp C_MUTE                    &mmv MOVE_DOWN                   &kp INSERT  &kp HOME   &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))  &trans     &kp PG_DN
                           &kp N0  &kp SPACE  &trans                                                                    &trans      &trans     &kp BACKSPACE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3_navi {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans                       &trans          &trans        &trans          &trans         &trans       &trans     &kp DEL
&trans  &trans  &trans  &trans  &trans     &trans               &trans  &trans  &trans  &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN       &kp UP       &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans     &trans     &trans            &trans          &kp INSERT    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
                        &trans  &kp SPACE  &kp SPACE                                    &kp ENTER     &kp ENTER       &kp BACKSPACE
            >;
        };

        layer_4_fn {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9      &kp F12    &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F4  &kp F5  &kp F6      &kp F11    &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3      &kp F10    &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &kp C_MENU  &kp SPACE  &trans                                    &trans  &trans  &trans
            >;
        };

        layer_5 {
            display-name = "setting";
            bindings = <
&studio_unlock  &trans           &trans        &trans        &trans        &trans                                      &mmv MOVE_UP                     &trans       &trans     &trans       &trans      &trans           &trans
&trans          &bt BT_CLR_ALL   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &trans
&trans          &rgb_ug RGB_TOG  &out OUT_TOG  &bootloader   &trans        &mkp MB5      &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                               &trans        &trans        &trans                                                                       &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
